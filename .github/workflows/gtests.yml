name: Run GTests Sequentially

on: [push, pull_request]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Install dependencies
        run: sudo apt-get install -y cmake g++

      - name: Install Valgrind
        run: sudo apt-get install -y valgrind

      - name: Download and Install Google Test
        run: |
          git clone https://github.com/google/googletest.git
          cd googletest
          mkdir build
          cd build
          cmake ..
          make
          sudo cp lib/*.a /usr/lib
          cd ../..

      - name: Configure Project
        run: cmake -B build -S .

      - name: Build Project
        run: cmake --build build

      - name: Run MatrixTest
        run: ./build/MatrixTest

      - name: Run QRTest
        run: ./build/QRTest

      - name: Run QRPerformanceTest
        run: ./build/QRPerformanceTest

      - name: Run FunctionTest
        run: ./build/FunctionTest

      - name: Run ErrorFunctionsTest
        run: ./build/ErrorFunctionTest

      - name: Run OptimizationTaskTest
        run: ./build/OptimizationTaskTest

      - name: Run LSMTaskTest
        run: ./build/LSMTaskTest

      - name: Run GradientOptimizerTest
        run: ./build/GradientOptimizerTest

      - name: Run NewtonGaussSolverTests
        run: ./build/NewtonGaussSolverTests

      - name: Run NewtonOptimizerTests
        run: ./build/NewtonOptimizerTest

      - name: Run LMTest
        run: ./build/LMTest

      - name: Run LMTestWithOurMatrix
        run: ./build/LMTestWithOurMatrix

      - name: Run SimpleGraph
        run: ./build/SimpleGraph

      - name: Run All Tests with Valgrind
        run: |
          tests=(
            MatrixTest
            QRTest
            QRPerformanceTest
            FunctionTest
            ErrorFunctionTest
            OptimizationTaskTest
            LSMTaskTest
            GradientOptimizerTest
            NewtonGaussSolverTests
            NewtonOptimizerTest
            LMTest
            LMTestWithOurMatrix
            SimpleGraph
          )
          for test in "${tests[@]}"; do
            echo "Running $test with Valgrind"
            valgrind --leak-check=full --error-exitcode=1 ./build/"$test"
          done
